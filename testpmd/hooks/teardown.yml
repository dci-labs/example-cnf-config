---
# Delete resources deployed under example-cnf namespace
- name: Check that cnf_namespace is defined
  assert:
    that:
      - cnf_namespace is defined
    fail_msg: "Please make sure cnf_namespace variable is defined to run the teardown"

- name: "Get a list of Subscriptions in {{ cnf_namespace }} namespace"
  community.kubernetes.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    namespace: "{{ cnf_namespace }}"
  register: sub_list

- name: "Delete Subscriptions in {{ cnf_namespace }} namespace"
  community.kubernetes.k8s:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    namespace: "{{ cnf_namespace }}"
    state: absent
    name: "{{ item.metadata.name }}"
  with_items: "{{ sub_list.resources }}"
  ignore_errors: yes

- name: "Get a list of ClusterServiceVersions in {{ cnf_namespace }} namespace"
  community.kubernetes.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: "{{ cnf_namespace }}"
  register: csv_list

- name: "Delete ClusterServiceVersions in {{ cnf_namespace }} namespace"
  community.kubernetes.k8s:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: "{{ cnf_namespace }}"
    state: absent
    name: "{{ item.metadata.name }}"
  with_items: "{{ csv_list.resources }}"
  ignore_errors: yes

- name: "Delete all resources within the namespace {{ cnf_namespace }}"
  shell: >
    {{ oc_tool_path }} delete all --all -n {{ cnf_namespace }}
  ignore_errors: yes

- name: "Delete the namespace {{ cnf_namespace }}"
  community.kubernetes.k8s:
    name: "{{ cnf_namespace }}"
    api_version: v1
    kind: Namespace
    state: absent
  ignore_errors: yes

- name: "Wait until namespace {{ cnf_namespace }} is deleted"
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ cnf_namespace }}"
  register: stuck_namespace
  until: stuck_namespace.resources | length == 0
  retries: 6
  delay: 10

# Delete example-cnf CatalogSource
- name: Delete example-cnf CatalogSource
  community.kubernetes.k8s:
    api_version: operators.coreos.com/v1alpha1
    kind: CatalogSource
    name: "{{ catalog_name | default('nfv-example-cnf-catalog') }}"
    namespace: openshift-marketplace
    state: absent

# Delete SRIOV resources
- name: Load SRIOV-related variables
  ansible.builtin.include_vars:
    file: "{{ example_cnf_sriov_file }}"

- name: Delete SriovNetwork
  community.kubernetes.k8s:
    api_version: sriovnetwork.openshift.io/v1
    kind: SriovNetwork
    name: "{{ sriov_network.name }}"
    namespace: openshift-sriov-network-operator
    state: absent
  loop: "{{ sriov_network_configs | json_query('[*].network') | select('defined') | list }}"
  loop_control:
    loop_var: sriov_network
  tags: [sriov]

- name: Delete SriovNetworkNodePolicy
  community.kubernetes.k8s:
    api_version: sriovnetwork.openshift.io/v1
    kind: SriovNetworkNodePolicy
    name: "{{ sriov_node_policy.name }}"
    namespace: openshift-sriov-network-operator
    state: absent
  loop: "{{ sriov_network_configs | json_query('[*].node_policy') | select('defined') | list }}"
  loop_control:
    loop_var: sriov_node_policy
  tags: [sriov]

...
