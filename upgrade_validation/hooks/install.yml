---
- name: "Select event from the default T-REX Profile"
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Event
    namespace: "{{ dci_openshift_app_ns|default('example-cnf') }}"
    field_selectors:
      - involvedObject.name=trex-app1
  register: default_events

- name: "Remove events from the default T-REX Profile"
  community.kubernetes.k8s:
    api_version: v1
    kind: Event
    state: absent
    namespace: "{{ dci_openshift_app_ns|default('example-cnf') }}"
    wait: yes
    name: "{{ event.metadata.name }}"
  loop: "{{ default_events.resources }}"
  loop_control:
    loop_var: event
  when:
    - "'resources' in default_events"
    - default_events.resources | length

- name: "find running T-REX pods"
  community.kubernetes.k8s_info:
    kind: Pod
    namespace: "{{ dci_openshift_app_ns|default('example-cnf') }}"
    label_selectors:
      - example-cnf-type=pkt-gen
    field_selectors:
      - status.phase=Running
  register: trex_pods
  retries: 3
  delay: 10

- name: "Sending SIGTERM to TREX running pods"
  shell: >
    set -o pipefail &&
    oc exec -it pod/{{ item.metadata.name }} -n {{ dci_openshift_app_ns|default('example-cnf') }} -- kill 1
  loop: "{{ trex_pods.resources }}"
  when:
    - "'resources' in trex_pods"
    - trex_pods.resources | length

- name: "Validation after the upgrade"
  include_role:
    name: "{{ cnf_tmp_dir.path }}/nfv-example-cnf-deploy/roles/example-cnf-validate"
    tasks_from: validate.yml

- name: "run k8s info on jobs"
  community.kubernetes.k8s_info:
    kind: Job
    namespace: "{{ dci_openshift_app_ns|default('example-cnf') }}"
  register: job
  retries: 3
  delay: 10

- name: "Set list of job names"
  set_fact:
      list: "{{ job | json_query('resources[*].metadata.name')}}"

- name: "Retrieve logs from jobs"
  community.kubernetes.k8s_log:
    namespace: "{{ dci_openshift_app_ns|default('example-cnf') }}"
    label_selectors:
      - job-name={{ job_name }}
  register: logs
  ignore_errors: true
  loop: "{{ list }}"
  loop_control:
    loop_var: job_name

- name: Store logs when jobs_logs is defined
  copy:
    content: "{{ job_out.log }}"
    dest: "{{ job_logs.path }}/{{ job_out.job_name}}.log"
  ignore_errors: true
  loop: "{{ logs.results }}"
  loop_control:
    loop_var: job_out
  when:
    - logs is defined
